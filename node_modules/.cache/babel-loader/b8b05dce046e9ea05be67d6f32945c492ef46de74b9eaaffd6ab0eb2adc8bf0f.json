{"ast":null,"code":"var _jsxFileName = \"F:\\\\New folder\\\\bunker-project\\\\src\\\\GameSettings.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { Button } from '@mui/material';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText } from '@mui/material';\nimport { Context } from './SnackBarStoreContext';\nimport { useParams, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameSettings() {\n  _s();\n  const [state, dispatch] = useContext(Context);\n  const [openBunkerList, setOpenBunkerList] = useState(false);\n  const {\n    bunkerName\n  } = useParams();\n  const bunkerList = JSON.parse(localStorage.getItem(\"bunker-\" + bunkerName));\n  useEffect(() => {\n    console.log(\"Loading bunkers from local storage\");\n    BunkerLoadFromLocal();\n  }, []);\n  function BunkerLoadFromLocal() {\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      console.log(\"Key: \" + key);\n      if (key.startsWith(\"bunker-\")) {\n        const bunkerName = key.substring('bunker-'.length);\n        const dataString = localStorage.getItem(key);\n        const data = JSON.parse(dataString);\n        setBunkerList(bunkerList => bunkerList.concat(data));\n      }\n    }\n    console.log(\"Bunker list: \" + bunkerList);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      children: \"Choose Bunker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), console.log(\"Bunker list: \" + bunkerList)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(GameSettings, \"RNoFNpxF1FGTyC+otur/gXWpOis=\", false, function () {\n  return [useParams];\n});\n_c = GameSettings;\nexport default GameSettings;\nvar _c;\n$RefreshReg$(_c, \"GameSettings\");","map":{"version":3,"names":["React","useState","useContext","Button","Dialog","DialogTitle","DialogContent","DialogContentText","Context","useParams","Link","GameSettings","state","dispatch","openBunkerList","setOpenBunkerList","bunkerName","bunkerList","JSON","parse","localStorage","getItem","useEffect","console","log","BunkerLoadFromLocal","i","length","key","startsWith","substring","dataString","data","setBunkerList","concat"],"sources":["F:/New folder/bunker-project/src/GameSettings.jsx"],"sourcesContent":["import React, {useState, useContext} from 'react';\r\nimport {Button } from '@mui/material';\r\nimport { Dialog, DialogTitle, DialogContent, DialogContentText } from '@mui/material';\r\nimport { Context } from './SnackBarStoreContext';\r\nimport { useParams, Link } from 'react-router-dom';\r\n\r\n\r\nfunction GameSettings () {\r\n    const [state, dispatch] = useContext(Context);\r\n    const [openBunkerList, setOpenBunkerList] = useState(false);\r\n    const { bunkerName } = useParams();\r\n\r\n    \r\n    const bunkerList = JSON.parse(localStorage.getItem(\"bunker-\" + bunkerName));\r\n\r\n    useEffect(() => {\r\n        console.log(\"Loading bunkers from local storage\")\r\n        BunkerLoadFromLocal()\r\n    }, []);\r\n    function BunkerLoadFromLocal() {\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n            const key = localStorage.key(i);\r\n            console.log(\"Key: \" + key)\r\n            if (key.startsWith(\"bunker-\")) {\r\n                const bunkerName = key.substring('bunker-'.length);\r\n                const dataString = localStorage.getItem(key);\r\n                const data = JSON.parse(dataString);\r\n                setBunkerList(bunkerList => bunkerList.concat(data))\r\n            }\r\n        }\r\n        console.log(\"Bunker list: \" + bunkerList)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/\">\r\n            <Button variant='contained'>Back</Button>\r\n            </Link>\r\n            <Button variant='contained'>Choose Bunker</Button>\r\n            \r\n            {console.log(\"Bunker list: \" + bunkerList)}\r\n                    \r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameSettings;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,UAAU,QAAO,OAAO;AACjD,SAAQC,MAAM,QAAQ,eAAe;AACrC,SAASC,MAAM,EAAEC,WAAW,EAAEC,aAAa,EAAEC,iBAAiB,QAAQ,eAAe;AACrF,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAAC;AAGnD,SAASC,YAAY,GAAI;EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,UAAU,CAACM,OAAO,CAAC;EAC7C,MAAM,CAACM,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM;IAAEe;EAAW,CAAC,GAAGP,SAAS,EAAE;EAGlC,MAAMQ,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,GAAGL,UAAU,CAAC,CAAC;EAE3EM,SAAS,CAAC,MAAM;IACZC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;IACjDC,mBAAmB,EAAE;EACzB,CAAC,EAAE,EAAE,CAAC;EACN,SAASA,mBAAmB,GAAG;IAC3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,YAAY,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;MAC1C,MAAME,GAAG,GAAGR,YAAY,CAACQ,GAAG,CAACF,CAAC,CAAC;MAC/BH,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGI,GAAG,CAAC;MAC1B,IAAIA,GAAG,CAACC,UAAU,CAAC,SAAS,CAAC,EAAE;QAC3B,MAAMb,UAAU,GAAGY,GAAG,CAACE,SAAS,CAAC,SAAS,CAACH,MAAM,CAAC;QAClD,MAAMI,UAAU,GAAGX,YAAY,CAACC,OAAO,CAACO,GAAG,CAAC;QAC5C,MAAMI,IAAI,GAAGd,IAAI,CAACC,KAAK,CAACY,UAAU,CAAC;QACnCE,aAAa,CAAChB,UAAU,IAAIA,UAAU,CAACiB,MAAM,CAACF,IAAI,CAAC,CAAC;MACxD;IACJ;IACAT,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGP,UAAU,CAAC;EAC7C;EAGA,oBACI;IAAA,wBACI,QAAC,IAAI;MAAC,EAAE,EAAC,GAAG;MAAA,uBACZ,QAAC,MAAM;QAAC,OAAO,EAAC,WAAW;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QAClC,eACP,QAAC,MAAM;MAAC,OAAO,EAAC,WAAW;MAAA,UAAC;IAAa;MAAA;MAAA;MAAA;IAAA,QAAS,EAEjDM,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGP,UAAU,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAKxC;AAEd;AAAC,GAzCQN,YAAY;EAAA,QAGMF,SAAS;AAAA;AAAA,KAH3BE,YAAY;AA2CrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}