{"ast":null,"code":"var _jsxFileName = \"F:\\\\New folder\\\\bunker-project\\\\src\\\\SnackBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport App from './App';\nimport './App.css';\nimport { Snackbar, Icon, IconButton, SnackbarContent } from '@mui/material';\nimport { amber, green } from '@mui/material/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnackBarMessage = props => {\n  _s();\n  const [open, setOpen] = useState(false);\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") return;\n    setOpen(false);\n  };\n  const handClickEvent = () => {\n    setOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {},\n    children: /*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      open: open,\n      autoHideDuration: 6000,\n      onClose: handleClose,\n      message: props.message,\n      action: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            children: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(SnackBarMessage, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n_c = SnackBarMessage;\nexport default SnackBarMessage;\nvar _c;\n$RefreshReg$(_c, \"SnackBarMessage\");","map":{"version":3,"names":["React","useState","useEffect","App","Snackbar","Icon","IconButton","SnackbarContent","amber","green","SnackBarMessage","props","open","setOpen","handleClose","event","reason","handClickEvent","vertical","horizontal","message"],"sources":["F:/New folder/bunker-project/src/SnackBar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport App from './App';\r\nimport './App.css';\r\nimport { Snackbar, Icon, IconButton, SnackbarContent } from '@mui/material';\r\nimport { amber, green } from '@mui/material/colors';\r\n\r\nconst SnackBarMessage = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === \"clickaway\") return;\r\n        setOpen(false);\r\n    };\r\n\r\n    const handClickEvent = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        <div style={{}}>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"left\",\r\n                }} \r\n            open = {open}\r\n            autoHideDuration = {6000}\r\n            onClose = {handleClose}\r\n            message = {props.message}\r\n            action = {\r\n                <React.Fragment>\r\n                    <IconButton\r\n                        size = \"small\" \r\n                        aria-label = \"close\"\r\n                        color = \"inherit\"\r\n                        onClick = {handleClose}\r\n                    >\r\n                        <Icon>close</Icon>\r\n                    </IconButton>\r\n                </React.Fragment>\r\n            }\r\n            />\r\n        </div>\r\n    );\r\n};\r\nexport default SnackBarMessage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,WAAW;AAClB,SAASC,QAAQ,EAAEC,IAAI,EAAEC,UAAU,EAAEC,eAAe,QAAQ,eAAe;AAC3E,SAASC,KAAK,EAAEC,KAAK,QAAQ,sBAAsB;AAAC;AAEpD,MAAMC,eAAe,GAAIC,KAAK,IAAK;EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEvC,MAAMa,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;IACnC,IAAIA,MAAM,KAAK,WAAW,EAAE;IAC5BH,OAAO,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,MAAMI,cAAc,GAAG,MAAM;IACzBJ,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,oBACI;IAAK,KAAK,EAAE,CAAC,CAAE;IAAA,uBACX,QAAC,QAAQ;MACL,YAAY,EAAE;QACVK,QAAQ,EAAE,QAAQ;QAClBC,UAAU,EAAE;MAChB,CAAE;MACN,IAAI,EAAIP,IAAK;MACb,gBAAgB,EAAI,IAAK;MACzB,OAAO,EAAIE,WAAY;MACvB,OAAO,EAAIH,KAAK,CAACS,OAAQ;MACzB,MAAM,eACF,QAAC,KAAK,CAAC,QAAQ;QAAA,uBACX,QAAC,UAAU;UACP,IAAI,EAAG,OAAO;UACd,cAAa,OAAO;UACpB,KAAK,EAAG,SAAS;UACjB,OAAO,EAAIN,WAAY;UAAA,uBAEvB,QAAC,IAAI;YAAA,UAAC;UAAK;YAAA;YAAA;YAAA;UAAA;QAAO;UAAA;UAAA;UAAA;QAAA;MACT;QAAA;QAAA;QAAA;MAAA;IAEpB;MAAA;MAAA;MAAA;IAAA;EACC;IAAA;IAAA;IAAA;EAAA,QACA;AAEd,CAAC;AAAC,GAtCIJ,eAAe;AAAA,KAAfA,eAAe;AAuCrB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}