{"ast":null,"code":"var _jsxFileName = \"F:\\\\New folder\\\\bunker-project\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [debug, setDebug] = useState(false);\n  const [text, setText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setDebug(!debug);\n      },\n      children: \"Set Debug Outputs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Debug state: \", debug ? \"True\" : \"False\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setText(\"Hello World\");\n      },\n      children: \"Set Text to Hello World\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Text: \", text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TVDMh4IijHcw4XIBXc95BApkO/g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","debug","setDebug","text","setText"],"sources":["F:/New folder/bunker-project/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nfunction App() {\n  const [debug, setDebug] = useState(false)\n  const [text, setText] = useState(\"\")\n  \n  return (\n    <div className=\"App\">\n      <button onClick={\n        () => {setDebug(!debug)}\n      }>\n        Set Debug Outputs\n      </button>\n      <p>Debug state: {debug ? \"True\" : \"False\"}</p>\n\n      <button onClick={\n        () => {setText(\"Hello World\")}\n      }>\n        Set Text to Hello World\n      </button>\n      <p>Text: {text}</p>\n      \n    </div>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEpC,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAQ,OAAO,EACb,MAAM;QAACG,QAAQ,CAAC,CAACD,KAAK,CAAC;MAAA,CACxB;MAAA,UAAC;IAEF;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAA,WAAG,eAAa,EAACA,KAAK,GAAG,MAAM,GAAG,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAE9C;MAAQ,OAAO,EACb,MAAM;QAACG,OAAO,CAAC,aAAa,CAAC;MAAA,CAC9B;MAAA,UAAC;IAEF;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAA,WAAG,QAAM,EAACD,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAEf;AAEV;AAAC,GAtBQH,GAAG;AAAA,KAAHA,GAAG;AAwBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}